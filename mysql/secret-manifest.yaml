apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: roboshop
  labels:
    component: mysql
    project: roboshop
    tier: databases
spec:
  replicas: 1
  # These are the labels replica set use to create pod replicas, this should match pod labels
  selector:
    matchLabels:
      component: mysql
      project: roboshop
      tier: databases
    # This is pod definition
  template:
    metadata:
      labels:
        component: mysql
        project: roboshop
        tier: databases
    spec:
      serviceAccount: roboshop-mysql-password
      volumes:
      - name: mysql-secret # creating the volume
        emptyDir: {} # here emptyDir is used to share the volume to multiple containers
      containers:
      - name: mysql
        image: maheswari450/mysql:v2
        imagePullPolicy: Always
        volumeMounts:
        - mountPath: /tmp
          name: mysql-secret
      initContainers:
      - name: fetch-secret
        image: amazon/aws-cli
        command:
        - sh 
        - -c 
        - |
          aws secretsmanager get-secret-value --secret-id roboshop/mysql/password --query SecretString --output text | jq -r .MYSQL_ROOT_PASSWORD > /tmp/mysql_root_password.txt
        volumeMounts:
        - mountPath: /tmp
          name: mysql-secret # same name as volumes
---
apiVersion: v1 
kind: Service
metadata:
  name: mysql
  namespace: roboshop
spec:
  selector:
    component: mysql
    project: roboshop
    tier: databases
  ports:
    - protocol: TCP
      port: 3306
      targetPort: 3306
